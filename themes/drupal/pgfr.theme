<?php
// $Id: pgfr.theme,v 1.29 2005/08/30 07:54:43 jx Exp $

  /*********************************************************************

   Theme: Pgfr
   Author: JC Arnu
   Email: jc dot arnu at free dot fr
   Description: Uses Postgresql.org css

   Todo: vérifier les align pour p, li, li p
   Todo: voir pour le pgFrontUser


  *********************************************************************/
function b($title,$content){
    $output  = "<div class=\"pgSideNav\">";
    $output .= "    <h2>".$title."</h2>";
    $output .= "    
		    <div>
			".$content."
		    </div>";
    $output .="</div>";
    return $output;
}

function s($title,$subleft,$subright,$body){
	$output  ="<!--<div class=\"pgFrontCenterUser\">\n<div class=\"pgFrontUser\">\n<div class=\"pgFrontUserInner\">\n-->";
	$output .="<div class=\"pgFrontUserWrap\">\n";
	$output .=" <div class=\"pgFrontUserContent\">";
	$output .="	<h1 class=\"plop\">".$subright." | ".$title."</h1>";
	$output .="
		    <p>
			    ".$subleft."
		    </p>";
	$output .="	
			    ".$body."
		    ";
	$output .=" </div>";
	$output .="</div>\n<!--</div>\n</div>\n</div>\n</div> -->\n";
	return $output;
}
function c($subject,$mod,$author,$date,$body){
    $output ="<div class=\"pgContentWrap\">";
    $output .="<h1 id=\"txtFrontFeatureHeading\">".$subject."</h1>";
    $output .="
		<p>
		    ".$author."/".$mod." = ".$date."
		</p>";
    $output .="
		<p>
		    ".$body."
		</p>";
    $output .="</div>";
    return $output;
}

		
/*function theme_get_setting($name){ return $$name;}

function theme_status_messages(){
foreach (drupal_get_messages() as $message) {
list($message, $type) = $message;
$output .= "<strong>". t("Status") ."</strong>: $message<hr />";
}
}*/

function pgfr_features() {
  return array('logo', 'toggle_primary_links');
}

function pgfr_settings() {
  $output = form_checkbox(t('Use the default secondary logo'), "pgfr_default_logo2", 1, variable_get('pgfr_default_logo2', 1), t('Check here if you want the theme to use the secondary logo supplied with it.'));
  $output .= form_textfield(t('Path to custom secondary logo'), "pgfr_logo2", variable_get('pgfr_logo2', ''), 50, 60, t('The path to the file you would like to use as your secondary logo file instead of the default logo.'));
  return $output;
}

function pgfr_page($content, $title = NULL, $breadcrumb = NULL) {
  if (isset($title)) {
    drupal_set_title($title);
  }
  if (isset($breadcrumb)) {
    drupal_set_breadcrumb($breadcrumb);
  }

  $colspan = 1;
  if ($blocksleft = theme("blocks", "left")) {
    $colspan++;
  }
  if ($blocksright = theme("blocks", "right")) {
    $colspan++;
  }

//  $output = '<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" "http://www.w3.org/TR/html4/loose.dtd">
$output ='
<!DOCTYPE
 html PUBLIC "-//W3C//DTD XHTML 1.1//EN"
  "http://www.w3.org/TR/xhtml11/DTD/xhtml11.dtd">
 <html>
 <!-- $Date: 2005/08/30 07:54:43 $ / $Revision: 1.29 $ / Last Theme Editor :$Author: jx $-->
  <head>
   ' . drupal_get_html_head() . '
   <title>';

  if ($title = drupal_get_title()) {
    $output .= "$title - ". variable_get("site_name", "drupal");
  }
  else {
    $output .= variable_get("site_name", "drupal");
    $output .= ($slogan = variable_get("site_slogan", "")) ? " - $slogan" : "";
  }

  $output .= '</title>
 <style type="text/css" media="screen" title="Normal Text">
    @import url("/layout/css/blue/fixed.css");
 </style>
 <style type="text/css" media="screen" title="Normal Text2">
    @import url(/"'.path_to_theme().'/pgfr.css");
 </style>
   </head>
   <body' . theme_onload_attribute() . '>
    <table border="0" cellspacing="5" cellpadding="0" width="100%">
     <tr>
      <!--td colspan="' . $colspan . '" width="100%"-->
      <td colspan="' . $colspan . '">
      <!-- Head -->
       <table border="0" cellspacing="0" cellpadding="0" width="100%">
        <tr>
	 <td align="left">
           <div id="pgHeader">
	    <div id="pgHeaderLogoLeft">
	     <a href="/" title="PostgreSQL"><img src="/layout/images/hdr_left.png" width="230" height="80" alt="PostgreSQL" /></a>
	    </div>
	    <div id="pgHeaderLogoRight">
	     <a href="/" title="La base de données la plus sophistiquée au monde."><img src="/layout/images/hdr_right.png" width="210" height="80" alt="La base de données la plus sophistiquée au monde." /></a>
	    </div>
	   </div>
         </td>
	 <td align="right">';
  if ($logo2) {
    $output .= '<img src="'. $logo2 .'" alt="" />';
  }
  $output .= '
         </td>
	</tr>
      </table> <!-- Head -->
      <br />
      <table border="0" cellspacing="0" cellpadding="0" width="100%">
              <tr>
	      	 <td align="left">
' . pgfr_linksbar() . '
		</td>
		</tr>
		</table>
      </td>
     </tr>
     <tr>
';

  if ($blocksleft) {
    $output .= "    <td style=\"vertical-align: top; width: 20%;\">\n";
    $output .= $blocksleft;
    $output .= "    </td>\n";
  }

  $output .= '
      <td style="vertical-align: top; width: ' . (($colspan == 1) ? '100%' : (($colspan == 2) ? '80%' : '60%')) . '">';

  if ($title = drupal_get_title()) {
    $output .= theme("breadcrumb", drupal_get_breadcrumb());
    $output .= "<h2 class=\"title\">$title</h2>";
  }

  if ($tabs = theme('menu_local_tasks')) {
    $output .= $tabs;
  }

  if ($help = menu_get_active_help()) {
    $output .= "<div id=\"help\">$help</div><!--hr /-->";
  }

  $output .= theme_status_messages();

  $output .= "\n<!-- begin content -->\n";
  $output .= $content;
  $output .= "\n<!-- end content -->\n";

  $output .= '              </td>
';

  if ($blocksright) {
    $output .= "              <td style=\"vertical-align: top; width: 20%; align: right;\">\n";
    $output .= $blocksright;
    $output .= "              </td>\n";
  }

  $output .= '
    </tr>
    <tr><td colspan="' . $colspan . '">
' . pgfr_linksbar() . '
    </td></tr>
   </table>
   <p style="text-align: center;">' . variable_get("site_footer", "") . '</p>
   ' . theme_closure() . '
</body>
</html>';

  return $output;
}

function pgfr_linksbar() { // helper function to prevent double code
  return '
		<div class="pgTopNav">
		   <div class="pgTopNavLeft"> 
		     <img src="/layout/images/nav_lft.png" width="7" height="23" alt="" />
		   </div>
		   <div class="pgTopNavRight">
		    <img src="/layout/images/nav_rgt.png" width="7" height="23" alt="" />
		  </div>
		  <ul class="pgTopNavList">
		   <li>'.str_replace("|","</li>
		   <li>",theme_get_setting('primary_links')).'</li>
		  </ul>
	        </div>';
} // close linksbar function


function pgfr_node($node, $main = 0, $page = 0) {
  $output = "\n<!-- node: \"$node->title\" -->\n";
  $title = l($node->title, "node/$node->nid");
  $subleft= t("Par %author le %date", array('%author' =>format_name($node), '%date' => format_date($node->created, 'small')));

  if (module_exist("taxonomy")) {
    $terms = taxonomy_link("taxonomy terms", $node);
    $subright = theme("links", $terms);
  }
  else {
    $subright = '';
  }

  if ($main && $node->teaser) {
    $body = $node->teaser;
  }
  else {
    $body = $node->body;
  }

  if ($links = link_node($node, $main)) {
    $body .= "<!--hr /--><div class=\"contentsLink\">[ " . theme("links", $links) . " ]</div>";
  }

  $output .= s( $title , $subleft , $subright , $body );

  return $output;
} // close node function


function pgfr_comment($comment, $link = "") {
  $author = "<b>" . format_name($comment) . "</b>";
  $body = $comment->comment ."<br /><!--hr /--><div class=\"contentsLink\">[ $link ]</div>";

  return c($comment->subject , $comment->moderation, $author , format_date($comment->timestamp) , $body);
} // close comment function


function pgfr_stripbreaks($a) { // helper function for generating the javascripted boxes
return $a;
//  return str_replace("\n","\\n",str_replace("\r","\\r",$a));
} // close stripbreaks function

function pgfr_box($subject, $content, $region = "main") {
  return b($subject ,$content ); 
} // close box function


function pgfr_block($block) {
  $output = "<div class=\"block block-$block->module\" id=\"block-$block->module-$block->delta\">\n";
  $output .= pgfr_box($block->subject, $block->content);
  $output .= "</div>\n";
  return $output;
} // close block function

?>
